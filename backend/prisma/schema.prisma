// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String
  lastName      String
  email         String?       @unique
  username      String        @unique
  password      String
  isFamilyAdmin Boolean       @default(false)
  Family        Family?       @relation(fields: [familyId], references: [id])
  familyId      String?       @db.ObjectId
  ChatRoom      Chatroom?     @relation(fields: [chatRoomId], references: [id])
  chatRoomId    String?       @db.ObjectId
  ChatMessage   ChatMessage[]
  Todo          Todo[]
}

model Family {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String  @unique
  description String?
  members     User[]
  Todo        Todo[]
  calendar    Calendar?
}

model Chatroom {
  id       String        @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  members  User[]
  messages ChatMessage[]
  familyId String?       @db.ObjectId
}

model ChatMessage {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id])
  chatroomId String   @db.ObjectId
}

model Todo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  duedate   DateTime
  completed Boolean
  assignedUser User   @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  familyId  String  @db.ObjectId
  family    Family  @relation(fields: [familyId], references: [id])
}
model Calendar {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  events        CalendarEvent[]
  Family        Family?       @relation(fields: [familyId], references: [id])
  familyId      String?       @db.ObjectId
}

model CalendarEvent {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  startDate   DateTime
  endDate     DateTime
  calendar    Calendar  @relation(fields: [calendarId], references: [id])
  calendarId  String    @db.ObjectId
}
